@model LionFishWeb.Models.CalendarViewModel
@{
	ViewBag.Title = "Events";
}

@section Nav {
	@Html.Partial("_NavApp");
}
<!DOCTYPE html>
<main>
	@section Scripts
        {
		<script type="text/javascript" src="@Url.Content("https://code.jquery.com/jquery-3.3.1.min.js")"></script>
		<script type="text/javascript" src="@Url.Content("https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js")"></script>
		<script type="text/javascript" src="@Url.Content("https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.js")"></script>
		<script type="text/javascript" src="@Url.Content("https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/locale/en-gb.js")"></script>
		<script type="text/javascript" src="@Url.Content("https://code.jquery.com/ui/1.12.0/jquery-ui.min.js")"></script>
		<script type="text/javascript" src="@Url.Content("https://cdnjs.cloudflare.com/ajax/libs/qtip2/3.0.3/jquery.qtip.min.js")"></script>
		<link rel="stylesheet" href="~/css/calendar.css" type="text/css" />
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/qtip2/3.0.3/jquery.qtip.min.css" type="text/css" />
		<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" type="text/css" />
		<link rel="stylesheet" href="~/css/scheduler.min.css" type="text/css" />
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.css" type="text/css" />
		<script type="text/javascript" src="@Url.Content("https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.js")"></script>
		<script type="text/javascript" src="@Url.Content("https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.4/scheduler.min.js")"></script>
		@*<script type="text/javascript" src="@Url.Content("~/scripts/CalendarJS.js")"></script>*@
		<script>
			$(document).ready(function () {

				//var selectedEvent; //Move to controller

				//$(".notesLink").click(function () {
				//	var noteID = $(this).attr("id");
				//	console.log("requiesting note" + noteID);
				//	$.post('/Note/IndexRequested', noteID, function () { });
				//});

				$(document).on("click", ".notesLink", function () {
					var noteID = $(this).attr("id");
					
					//noteID = JSON.stringify(noteID);
					console.log("requiesting note " + noteID);
                    $.post('/Note/SetCurrentNote', { Id: noteID }, function () { });
                    window.location.href = "/Note";
				});

				$("#closePopup").click(function () {
					$('#popup').css('display', 'none');
				});
				$("#closeEditor").click(function () {
					$('#editor').css('display', 'none');
				});
				$("#closeCreator").click(function () {
					$('#createEvent').css('display', 'none');
				});
				//$("#deleteDis").click(function () {
				//	$('#calendar').fullCalendar('removeEvents', eventObj.id)
				//	$('#calendar').fullCalendar('updateEvent', eventObj);
				//	$('#popup').css('display', 'none');
				//});
				//$("#applyEdit").click(function () {
				//	eventObj.title = $('#chName').val();
				//	eventObj.color = $('#chColor').val();
				//	eventObj.description = $('#chDesc').val();
				//	$('#calendar').fullCalendar('updateEvent', eventObj);
				//	$('#popuptext').text(eventObj.title);
				//	$("#popuptext").append("<p id=\"id\">" + eventObj.id + "</p>");
				//	$("#popuptext").append("<p id=\"date\">" + moment(eventObj.start).format('h:mm:ss a') + "</p>");
				//	$("#popuptext").append("<p id=\"desc\">" + eventObj.description + "</p>");
				//	$('#editor').css('display', 'none');
				//});
				$("#modEvent").click(function () {

					$('#chName').val(eventObj.title);
					$('#chColor').val(eventObj.color);
					$('#chDesc').val(eventObj.description);
					console.log($('#chStart').val());
					$('#chEnd').val(moment(eventObj.end).format("YYYY-MM-DD"));
					$('#editor').css('display', 'inline');
					$("#editor").css("position", "absolute");
				});
				/* initialize the external events
				-----------------------------------------------------------------*/



				/* initialize the calendar
				-----------------------------------------------------------------*/

				$('#calendar').fullCalendar({
					header: {
						left: 'prev,next today addEventButton',
						center: 'title ',
						right: 'timeline,month,agendaWeek,agendaDay'
					},
					eventLimit: true, // for all non-agenda views
					eventLimitClick: "popover",
					views: {
						agenda: {
							eventLimit: 6// adjust to 6 only for agendaWeek/agendaDay
						}
					},
					schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
					editable: true,
					navLinks: true,
					selectable: true,
					droppable: true, // this allows things to be dropped onto the calendar
					dragRevertDuration: 0,
					drop: function () {
						// is the "remove after drop" checkbox checked?
						if ($('#drop-remove').is(':checked')) {
							// if so, remove the element from the "Draggable Events" list
							$(this).remove();
						}
					},
					dayClick: function (date, jsEvent, view) {
						$('#createEvent').css('left', event.pageX - 240);      // <<< use pageX and pageY
						$('#createEvent').css('top', event.pageY - 50);
						$('#createEvent').css('display', 'inline');
						$("#createEvent").css("position", "absolute");
					},
					//customButtons: {
					//	addEventButton: {
					//		text: 'add event...',
					//		click: function () {
					//			$('#createEvent').css('left', event.pageX);      // <<< use pageX and pageY
					//			$('#createEvent').css('top', event.pageY);
					//			$('#createEvent').css('display', 'inline');
					//			$("#createEvent").css("position", "absolute");
					//		}
					//	}
					//},
					eventClick: function (calEvent, jsEvent, view) {
						eventObj = calEvent;
						//eventObj = $("#calendar").fullCalendar('clientEvents', selectedEvent.id)[0];
						$('#popuptext').text(calEvent.title);
						//$("#popuptext").append("<p id=\"id\">" + calEvent.id + "</p>");
						$("#popuptext").append("<p id=\"date\">" + moment(calEvent.start).format('h:mm:ss a') + "</p>");
						$("#popuptext").append("<p id=\"desc\">" + calEvent.description + "</p>");

						var eventNotes = JSON.parse(calEvent.notes);
						for (var key in eventNotes) {
							if (eventNotes.hasOwnProperty(key)) {
								console.log(key + " -> " + eventNotes[key]);
								var link = "<span class=\"notesLink\" id=\"" + key + "\">" + eventNotes[key] + "</span>";
								console.log(link);
								$("#popuptext").append(link);
							}
							
						}
						console.log(calEvent.notes);
						console.log(eventNotes);
						
						//$('#popuptext').append(calEvent.id).attr(id="id");
						//console.log(calEvent.id);
						$('#popup').css('left', event.pageX - 240);      // <<< use pageX and pageY
						$('#popup').css('top', event.pageY - 50);
						$('#popup').css('display', 'inline');
						$("#popup").css("position", "absolute");  // <<< also make it absolute!
						$('#chID').val(eventObj.id);

					},
					eventDragStop: function (event, jsEvent, ui, view) {

						if (isEventOverDiv(jsEvent.clientX, jsEvent.clientY)) {
							$('#calendar').fullCalendar('removeEvents', event._id);
							var el = $("<div class='fc-event'>").appendTo('#external-events-listing').text(event.title);
							el.draggable({
								zIndex: 999,
								revert: true,
								revertDuration: 0
							});
							el.data('event', { title: event.title, id: event.id, stick: true });
						}
					},
					eventRender: function (event, element) {
						events = $("#calendar").fullCalendar('clientEvents');

						for (var i = 0; i < events.length; i++) {

							var event = {
								title: events[i].title,
								start: moment(events[i].start).format("YYYY-MM-DD HH:mm"),
								end: moment(events[i].end).format("YYYY-MM-DD HH:mm"),
								id: events[i].id,
								color: events[i].color,
								notes: events[i].notes,
								editable: true,
								description: events[i].description,
								allDay: events[i].allDay
							}
							console.log("saving " + event.id);
							//var myJSON = JSON.stringify(event)
							//console.log(myJSON);
							$.post('/Calendar/AutoSave', event, function () { });
						};
					}

				});


				var isEventOverDiv = function (x, y) {

					var external_events = $('#external-events');
					var offset = external_events.offset();
					offset.right = external_events.width() + offset.left;
					offset.bottom = external_events.height() + offset.top;

					// Compare
					if (x >= offset.left
						&& y >= offset.top
						&& x <= offset.right
						&& y <= offset.bottom) { return true; }
					return false;

				};

				var loadEvents = function () {
					var listOfEvents = @Html.Raw(Json.Encode(ViewData["Events"]));

					for (var i = 0; i < listOfEvents.length; i++) {
						var start = moment(listOfEvents[i].Start).format("YYYY-MM-DD HH:mm");
						var end = moment(listOfEvents[i].End).format("YYYY-MM-DD HH:mm");
						$('#calendar').fullCalendar('renderEvent', {
							title: listOfEvents[i].Title,
							start: moment(start, "YYYY-MM-DD HH:mm").add(8, 'hours'),
							end: moment(end, "YYYY-MM-DD HH:mm").add(8, 'hours'),
							id: listOfEvents[i].ID,
							color: listOfEvents[i].Color,
							notes: listOfEvents[i].Notes,
							editable: true,
							description: listOfEvents[i].Description,
							allDay: listOfEvents[i].AllDay
						}, true);
					}
				};
				var loadPublicEvents = function () {
					var listOfEvents = @Html.Raw(Json.Encode(ViewData["EventsPublic"]));
					
					for (var i = 0; i < listOfEvents.length; i++) {
						
						

						var html = '<div style="z-index:99999"class="fc-event" id=' + listOfEvents[i].ID + 'IMPORTED>' + listOfEvents[i].Title + '</div>' // '<li>' + listOfEvents[i].Title + '</li>' +
						//'<li>' + moment(start, "YYYY-MM-DD HH:mm").add(8, 'hours') + '</li>' +
						//'<li>' + moment(end, "YYYY-MM-DD HH:mm").add(8, 'hours') + '</li>' +
						//'<li>' + listOfEvents[i].Description + '</li>' +
						//'<li>' + listOfEvents[i].Color + '</li>' +
						//'<li>' + listOfEvents[i].AllDay + '</li>' +
						//'<li>' + listOfEvents[i].Notes + '</li>' +
						//'</ul>'
						$('#external-events-listing').append(html);

						//$('#external-events-listing').html('<div class="fc-event' + listOfEvents[i].ID+'" id='+listOfEvents[i].ID+'IMPORTED>'+listOfEvents[i].Title+'</div>');

					}
				};
				loadEvents();
				loadPublicEvents();
				$('#external-events .fc-event').each(function () {
					var listOfEvents = @Html.Raw(Json.Encode(ViewData["EventsPublic"]));
					// store data so the calendar knows to render an event upon drop
					for (var i = 0; i < listOfEvents.length; i++) {
						if ($(this).attr("id") == listOfEvents[i].ID + "IMPORTED") {
							var start = moment(listOfEvents[i].Start).format("YYYY-MM-DD HH:mm");
							var end = moment(listOfEvents[i].End).format("YYYY-MM-DD HH:mm");
							console.log("Public events: " + listOfEvents[i].Notes);
							$(this).data('event', {
								title: listOfEvents[i].Title,
								start: moment(start, "YYYY-MM-DD HH:mm").add(8, 'hours'),
								end: moment(end, "YYYY-MM-DD HH:mm").add(8, 'hours'),
								id: listOfEvents[i].ID,// + listOfEvents[i].UserID,
								color: listOfEvents[i].Color,
								notes: listOfEvents[i].Notes,
								editable: true,
								description: listOfEvents[i].Description,
								allDay: listOfEvents[i].AllDay
							});
						}
					}
						// make the event draggable using jquery ui
					$(this).draggable({
						zindex: 999,
						revert: true,      // will cause the event to go back to its
						revertduration: 0  //  original position after the drag
					});
				});
				if('@Model.ID' != null) {
					$('#calendar').fullCalendar('gotoDate', '@Model.DateT');
				}
				
			});
		</script>
	}


	<aside class="split" id="lf">
		<div id="sb">
			<div class="tt" style="position:relative;">
				Calendar
				<div id="newnf" style="background:mediumslateblue;">+</div>
			</div>
			<div class="bc" style="padding:0;overflow:visible;">
				<div id='external-events'>
					@using (Html.BeginForm())
					{
						@Html.AntiForgeryToken()

						@Html.Editor("Search", new { htmlAttributes = new { id = "Search" } })

						<button formaction=@Url.Action("Search") formmethod="post" type="submit" style="padding:5px;background-color:cornflowerblue;" >Search Event</button>
						<button formaction=@Url.Action("Search") formmethod="post" type="submit" style="padding:5px;background-color:orange;" >Clear Search</button>
					}
					<div id='external-events-listing'>
						<h4>Imported Events</h4>

					</div>
					<p @*style=" display:none"*@>
						<input type='checkbox' id='drop-remove' checked='checked' />

					</p>
				</div>
			</div>
		</div>
	</aside>
	<section class="split" id="rt">
		<div id="ct">
			<div id="swap1">
				<div class="tt"></div>
				<div class="bc">
					<div id='wrap'>
						<div style="display:none;padding:10px;background-color: lightblue;  z-index:999;" id="popup">
                            <div id="popuptext">
                               




                            </div>
							<button id="modEvent">Modify event</button>
							<div style="display:none;padding:10px;height:auto;background-color: lightblue;  z-index:9999;" id="editor">
								@using (Html.BeginForm())
								{
									@Html.AntiForgeryToken()
									<p>
										ID
										@Html.Editor("ID", new { htmlAttributes = new { id = "chID" } })
									</p>
									<p>Title</p>
									@Html.Editor("Title", new { htmlAttributes = new { id = "chName" } })
									<p>Color</p>
									@Html.TextBox("Color", "#4286f4", new { type = "color", htmlAttributes = new { id = "chColor" } })
									<p>Description</p>
									@Html.Editor("Description", new { htmlAttributes = new { id = "chDesc" } })
									<p>All day?</p>
									@Html.CheckBox("AllDay", false)
									<p>Start date</p>
									@Html.TextBox("Start", "2019-01-01", new { type = "date", htmlAttributes = new { id = "chStart" } })
									<p>End date</p>
									@Html.TextBox("End", "2019-01-02", new { type = "date", htmlAttributes = new { id = "chEnd" } })
									<p>Make this event public?</p>
									@Html.CheckBox("Public", false)
									<button formaction=@Url.Action("Publish") formmethod="post" type="submit" style="padding:5px;background-color:limegreen;" id="publish">Publish this event?</button>
									<button formaction=@Url.Action("Apply") formmethod="post" type="submit" style="padding:5px;background-color:limegreen;" id="applyEdit">Apply</button>
									<button formaction=@Url.Action("Delete") formmethod="post" type="submit" style="padding:5px;background-color:red;" id="deleteDis">Remove Event</button>
								}
								<button style="padding:5px;background-color:orange;" id="closeEditor">Close</button>
							</div>
							<button style="padding:5px;background-color:orange;" id="closePopup">Close</button>
						</div>
						<div style="display:none;padding:10px;background-color: lightblue;  z-index:999;" id="createEvent">
							<div id="creatorText"></div>
							@using (Html.BeginForm())
							{
								@Html.AntiForgeryToken()
								@*<p>
									ID
									@Html.Editor("ID", new { htmlAttributes = new { id = "chID" } })
								</p>*@
								<p>Title</p>
								@Html.Editor("Title", new { htmlAttributes = new { id = "chName" } })
								<p>Color</p>
								@Html.TextBox("Color", "#4286f4", new { type = "color", htmlAttributes = new { id = "chColor" } })
								<p>Description</p>
								@Html.Editor("Description", new { htmlAttributes = new { id = "chDesc" } })
								<p>All day?</p>
								@Html.CheckBox("AllDay", false)
								<p>Start date</p>
								@Html.TextBox("Start", "2019-01-01", new { type = "date", htmlAttributes = new { id = "chStart" } })
								<p>End date</p>
								@Html.TextBox("End", "2019-01-02", new { type = "date", htmlAttributes = new { id = "chEnd" } })

								<button formaction=@Url.Action("Create") formmethod="post" type="submit" style="padding:5px;background-color:limegreen;" id="applyEdit">Create</button>
							}
							<button style="padding:5px;background-color:orange;" id="closeCreator">Close</button>
						</div>
					</div>



					<div id='calendar' style="z-index:-1"></div>
					<div style='clear:both'></div>
				</div>
			</div>
		</div>
	</section>

</main>
